def sendslacknotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


node{
 echo "job name is :${env.JOB_NAME}"
 echo "Node name is : ${env.NODE_NAME}"
def MavenHome = tool name: 'maven3.8.4'


try{
    //Get the code from github repository
stage('checkoutcode')
{
git branch: 'development', credentialsId: '04a16d3e-8577-4688-bd33-b66cd0537993', url: 'https://github.com/amarselenium/maven-web-application.git'
}

//Building the code using maven build
stage('Build')
{
sh "${MavenHome}/bin/mvn clean package"
}

/*//Execute sonarqube report
stage('ExecuteSonarQubeReport')
{
sh "${MavenHome}/bin/mvn sonar:sonar"
}

//Upload Artifact into artifact repository
stage('Deploying build to nexus server')
{
sh "${MavenHome}/bin/mvn deploy"
}

//Copying WAR file to the tomcat server
stage('Deploying to the tomcat server')
{
sshagent(['3f0e8d75-2b12-4a6e-85f4-ee3c5ba7b4af']) 
 {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@52.66.237.157:/opt/apache-tomcat-9.0.62/webapps/"
    
}

}*/
}
catch(e)
{
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    sendslacknotifications(currentBuild.result)
  }
}
